Description: removing the function valid_version_installed
 removing require of rubygems from test/test_helper.rg will break the functions:
 image_magick_version and minimum_image_magick_version from lib/mini_magick.rb, hence
 the function valid_version_installed too (It compares both former values). To get rid
 of the error all three functions are removed from lib/mini_magick.rb and the test
 valid_version_installed is replaced by a TRUE in test/image_test.rb.
Author: Markus Tornow <tornow@riseup.net>
Forwarded: not-needed
Last-Update: 2013-04-02
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/lib/mini_magick.rb
+++ b/lib/mini_magick.rb
@@ -21,18 +21,6 @@ module MiniMagick
         self.processor = "gm"
       end
     end
-
-    def image_magick_version
-      @@version ||= Gem::Version.create(`mogrify --version`.split(" ")[2].split("-").first)
-    end
-
-    def minimum_image_magick_version
-      @@minimum_version ||= Gem::Version.create("6.6.3")
-    end
-
-    def valid_version_installed?
-      image_magick_version >= minimum_image_magick_version
-    end
   end
 
   MOGRIFY_COMMANDS = %w{adaptive-blur adaptive-resize adaptive-sharpen adjoin affine alpha annotate antialias append attenuate authenticate auto-gamma auto-level auto-orient backdrop background bench bias black-point-compensation black-threshold blend blue-primary blue-shift blur border bordercolor borderwidth brightness-contrast cache caption cdl channel charcoal chop clamp clip clip-mask clip-path clone clut coalesce colorize colormap color-matrix colors colorspace combine comment compose composite compress contrast contrast-stretch convolve crop cycle debug decipher deconstruct define delay delete density depth descend deskew despeckle direction displace display dispose dissimilarity-threshold dissolve distort dither draw duplicate edge emboss encipher encoding endian enhance equalize evaluate evaluate-sequence extent extract family features fft fill filter flatten flip floodfill flop font foreground format frame function fuzz fx gamma gaussian-blur geometry gravity green-primary hald-clut help highlight-color iconGeometry iconic identify ift immutable implode insert intent interlace interpolate interline-spacing interword-spacing kerning label lat layers level level-colors limit linear-stretch linewidth liquid-rescale list log loop lowlight-color magnify map mask mattecolor median metric mode modulate monitor monochrome morph morphology mosaic motion-blur name negate noise normalize opaque ordered-dither orient page paint path pause pen perceptible ping pointsize polaroid poly posterize precision preview print process profile quality quantize quiet radial-blur raise random-threshold red-primary regard-warnings region remap remote render repage resample resize respect-parentheses reverse roll rotate sample sampling-factor scale scene screen seed segment selective-blur separate sepia-tone set shade shadow shared-memory sharpen shave shear sigmoidal-contrast silent size sketch smush snaps solarize sparse-color splice spread statistic stegano stereo stretch strip stroke strokewidth style subimage-search swap swirl synchronize taint text-font texture threshold thumbnail tile tile-offset tint title transform transparent transparent-color transpose transverse treedepth trim type undercolor unique-colors units unsharp update verbose version view vignette virtual-pixel visual watermark wave weight white-point white-threshold window window-group write}
--- a/test/image_test.rb
+++ b/test/image_test.rb
@@ -249,7 +249,7 @@ class ImageTest < Test::Unit::TestCase
   end
 
   def test_simple_composite
-    if MiniMagick.valid_version_installed?
+    if TRUE
       image = Image.open(EXIF_IMAGE_PATH)
       result = image.composite(Image.open(TIFF_IMAGE_PATH)) do |c|
         c.gravity "center"
